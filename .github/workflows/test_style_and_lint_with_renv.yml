name: R Project CI

on:
  pull_request:
    branches: [ develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 'release'

    - name: Set up renv
      uses: r-lib/actions/setup-renv@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev \
          libxml2-dev \
          libssl-dev \
          libudunits2-dev  # Added this line for udunits2 support

    - name: Style R code
      run: |
        Rscript -e "styler::style_pkg(include_roxygen_examples = FALSE); warnings()"

    - name: Check for changes by styler
      id: check_styler_changes
      run: |
        if git diff --quiet; then
          echo "No changes made by styler."
          echo "changes_made=false" >> $GITHUB_ENV
        else
          echo "Changes made by styler."
          echo "changes_made=true" >> $GITHUB_ENV
        fi

    - name: Commit and push if styler made a change
      if: env.changes_made == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m 'Style code with styler'
        git pull --rebase origin ${GITHUB_HEAD_REF}
        git push origin HEAD:refs/heads/${GITHUB_HEAD_REF}

    - name: Fetch the latest changes if there's a push from styler update
      if: env.changes_made == 'true'
      run: |
        git fetch origin ${GITHUB_HEAD_REF}

    - name: Run lintr
      run: |
        COMMIT_HASH=$(git rev-parse origin/${GITHUB_HEAD_REF})
        COMMIT_MESSAGE=$(git log -1 --pretty=%B $COMMIT_HASH)
        COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an' $COMMIT_HASH)
        echo "Running lintr to '$COMMIT_MESSAGE' commit by $COMMIT_AUTHOR #${COMMIT_HASH:0:7}"
        Rscript -e "result <- lintr::lint_package(); print(result);
        cat('Number of lintr comments generated:', length(result))"
